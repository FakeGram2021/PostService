name: Post service dockerize and push to hub

on:
  push:
    branches: [main]

  workflow_dispatch:

jobs:
  determine-version:
    name: Determine version
    runs-on: ubuntu-20.04
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
  dockerize-and-push-to-hub:
    runs-on: ubuntu-20.04
    needs: determine-version
    env:
      SEMVER: ${{ needs.determine-version.outputs.semVer }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/post-service:latest, ${{ secrets.DOCKERHUB_USERNAME }}/post-service:${{env.SEMVER}}
  github-release:
    runs-on: ubuntu-20.04
    needs: determine-version
    env:
      SEMVER: ${{ needs.determine-version.outputs.semVer }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{env.SEMVER}}
          release_name: Release ${{env.SEMVER}}
